{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/ami/account-credentials/account-credentials.component.ts","./src/app/ami/account-credentials/account-credentials.component.html","./src/app/ami/ami.component.ts","./src/app/ami/ami.component.html","./src/app/ami/instance-id/instance-id.component.ts","./src/app/ami/instance-id/instance-id.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.router.ts","./src/app/app.service.ts","./src/app/docker-page/docker-page.component.ts","./src/app/docker-page/docker-page.component.html","./src/app/guards/ami.guard.ts","./src/app/guards/docker.guard.ts","./src/app/guards/main.guard.ts","./src/app/guards/ovf.guard.ts","./src/app/guards/success-page.guard.ts","./src/app/ovf/account-credentials-ovf/account-credentials-ovf.component.ts","./src/app/ovf/account-credentials-ovf/account-credentials-ovf.component.html","./src/app/ovf/ovf.component.ts","./src/app/ovf/ovf.component.html","./src/app/success-page/success-page.component.ts","./src/app/success-page/success-page.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.5c8018aafb7f870dbf0d.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\n\n@Component({\n    selector: 'app-account-credentials',\n    templateUrl: './account-credentials.component.html',\n    styleUrls: ['./account-credentials.component.scss'],\n})\nexport class AppAccountCredentialsComponent {\n    public amiUserData = {\n        username: '',\n        password: '',\n    };\n\n    public fields = {\n        USERNAME: 'username',\n        PASSWORD: 'password',\n        REPEAT_PASSWORD: 'repeatPassword',\n    };\n\n    public repeatPassword: '';\n    public isIdentical: boolean;\n    public errorMessage: '';\n    public isSubmitted = false;\n\n    constructor(private router: Router, public appService: AppService) {\n    }\n\n    /**\n     * Trim whitespaces in fields\n     * @param event - User keyup event\n     * @param {string} field - Name of active input filed\n     */\n    onKey(event: any, field: string) {\n        switch(field) {\n            case this.fields.USERNAME: {\n                this.amiUserData.username = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.PASSWORD: {\n                this.amiUserData.password = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.REPEAT_PASSWORD: {\n                this.repeatPassword = event.target.value.trim();\n                break;\n            }\n        }\n        this.isSubmitted = false;\n        this.errorMessage = '';\n    }\n\n    /**\n     * Checks password fields for identical\n     */\n    public onPasswordChange(): void {\n        this.isIdentical = this.amiUserData.password === this.repeatPassword;\n    }\n\n    /**\n     * Send a request and navigate to success page if response is success\n     * @returns {boolean | void} boolean - result of matching password fields\n     */\n    public submit(isError): (boolean | void) {\n        this.isSubmitted = true;\n        this.onPasswordChange();\n        if (!this.isIdentical) { return false; }\n        if (isError) return;\n        this.appService.checkUserData(this.amiUserData).then(() => {\n            this.router.navigate(['success-page']);\n        }).catch( (err) => {\n            this.errorMessage = err.error.title ? err.error.title : err.statusText;\n        });\n    }\n}\n","<div class=\"tab-pane\">\n  <div class=\"row justify-content-center\">\n    <p>Create your username and password to access your PMM</p>\n  </div>\n  <form>\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-10 offset-xl-2 offset-1 input-wrapper\">\n        <div class=\"row\">\n          <div class=\"col-12 text-right\">\n            <input type=\"text\" class=\"custom-form-input form-control\" placeholder=\"Username\"\n                   name=\"{{ fields.USERNAME }}\"\n                   [(ngModel)]=\"amiUserData.username\"\n                   #user=\"ngModel\"\n                   (keyup)=\"onKey($event, fields.USERNAME)\"\n                   required>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div *ngIf=\"user?.errors && isSubmitted\"\n               class=\"col-xl-9 col-12 error-text\">\n            <div *ngIf=\"user?.errors?.required\">*Field is required</div>\n          </div>\n            <div *ngIf=\"errorMessage\" class=\"error-text col-xl-9 col-xs-12\">*{{ errorMessage }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 text-right\">\n            <input type=\"password\" class=\"custom-form-input form-control\" placeholder=\"Password\"\n                   name=\"{{ fields.PASSWORD }}\"\n                   [(ngModel)]=\"amiUserData.password\"\n                   #pass=\"ngModel\"\n                   (keyup)=\"onKey($event, fields.PASSWORD)\"\n                   maxlength=\"255\"\n                   required>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div *ngIf=\"pass?.errors && isSubmitted\"\n               class=\"col-xl-9 col-12 error-text\">\n            <div *ngIf=\"pass?.errors?.required\">*Field is required</div>\n            <div *ngIf=\"pass?.errors?.maxlength\">*Field can not me more than 255 characters</div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 text-right\">\n            <input type=\"password\" class=\"custom-form-input form-control\" placeholder=\"Repeat Password\"\n                   name=\"{{ fields.REPEAT_PASSWORD }}\"\n                   [(ngModel)]=\"repeatPassword\"\n                   #repeatpass=\"ngModel\"\n                   (keyup)=\"onKey($event, fields.REPEAT_PASSWORD)\"\n                   required>\n          </div>\n        </div>\n        <div class=\"row error-text\">\n          <div *ngIf=\"repeatpass?.errors && isSubmitted\"\n               class=\"col-xl-9 col-12\">\n            <div *ngIf=\"repeatpass?.errors?.required\">*Field is required</div>\n          </div>\n          <div *ngIf=\"!isIdentical && isSubmitted\" class=\"col-xl-9 col-12\">*Passwords must be identical</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 text-right button-row\">\n            <button class=\"btn btn-primary\" type=\"reset\">Reset</button>\n            <button class=\"btn btn-primary\"\n                    (click)=\"submit(!user?.valid || !pass?.valid || !repeatpass?.valid)\">Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-add-ami',\n  templateUrl: './ami.component.html',\n  styleUrls: ['./ami.component.scss']\n})\nexport class AppAmiInstallationComponent {\n\n  constructor() { }\n}\n","<div class=\"container-fluid header\">\n    <div class=\"row\">\n        <div class=\"col-xl-4 col-5 border-right\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-2\">\n                        <img src=\"./assets/pmm-logo.png\" class=\"header-logo\" alt=\"pmm-logo\">\n                    </div>\n                    <div class=\"col-10\">Percona Monitoring and Management</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-8 col-7\">\n            <p>Installation <i class=\"fa fa-long-arrow-right\"></i> AMI</p>\n        </div>\n    </div>\n</div>\n<div class=\"container main\">\n    <div class=\"row\">\n        <div class=\"col-xl-10 offset-xl-1 col-12\">\n            <p class=\"text-center\">PMM Installation Wizard</p>\n            <section>\n                <ul class=\"nav nav-tabs gf-tabs\">\n                    <li class=\"nav-item gf-tabs-item\" routerLinkActive=\"active\"><a routerLink=\"instance-id\">Instance ID\n                        Verification</a>\n                    </li>\n                    <li><i class=\"fa fa-long-arrow-right\"></i></li>\n                    <li class=\"nav-item\" routerLinkActive=\"active\"><a routerLink=\"account-credentials\">Account\n                        Credentials</a></li>\n                </ul>\n                <div class=\"tab-content table-panel-wrapper\">\n                    <router-outlet></router-outlet>\n                </div>\n            </section>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\n\n@Component({\n    selector: 'app-instance-id',\n    templateUrl: './instance-id.component.html',\n    styleUrls: ['./instance-id.component.scss'],\n})\nexport class AppInstanceIdComponent {\n    public instanceId = '';\n    public isOpenModal = false;\n    public errorMessage: '';\n    public isSubmitted = false;\n\n    constructor(private router: Router, public appService: AppService) {\n    }\n\n    /**\n     * Show modal dialog with instructions of getting instance id\n     */\n    public toggleModal(): void {\n        this.isOpenModal = !this.isOpenModal;\n    }\n\n    /**\n     * Trim whitespaces in instance id input field\n     * @param event - User keyup event\n     */\n    onKey(event: any) {\n        this.instanceId = event.target.value.trim();\n        this.isSubmitted = false;\n        this.errorMessage = '';\n    }\n\n    /**\n     * Send a request and navigate to success page if response is success\n     */\n    public submit(isError): void {\n        this.isSubmitted = true;\n        if (isError) return;\n        this.appService.checkInstanceId(this.instanceId).then(() => {\n            this.router.navigate(['ami/account-credentials']);\n        }).catch( (err) => {\n            this.errorMessage = err.error.title ? err.error.title : err.statusText;\n        });\n    }\n}\n","<div class=\"tab-pane\">\n  <div class=\"row\">\n    <p\n      class=\"text-center col-xl-8 col-10 offset-xl-2 offset-1\">\n      Please provide the Amazon Instance ID (AMI ID) from the AWS Console. It uses the format of i-abc123def.</p>\n  </div>\n  <form action=\"\">\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-10 offset-xl-3 offset-1 input-wrapper\">\n        <div class=\"row flex-column-reverse flex-xl-row align-items-center\">\n          <div class=\"col-xl-9 col-12 text-right\">\n            <input type=\"text\" class=\"custom-form-input form-control\" placeholder=\"Instance ID\"\n                   name=\"instance-id\"\n                   [(ngModel)]=\"instanceId\"\n                   #id=\"ngModel\"\n                   pattern=\"^i-[0-9a-f]+$\"\n                   (keyup)=\"onKey($event)\"\n                   required>\n          </div>\n          <div class=\"col-xl-3 col-12 pl-xl-0\">\n            <a href=\"javascript:;\" class=\"modal-link\" (click)=\"toggleModal()\">Where should I get my\n              Instance\n              ID?</a>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div *ngIf=\"id?.errors && isSubmitted\" class=\"col-xl-9 col-xs-12\">\n            <div *ngIf=\"id?.errors?.required\" class=\"error-text\">*Field is required</div>\n            <div *ngIf=\"id?.errors?.pattern\" class=\"error-text\">*Must be correct instance id</div>\n          </div>\n            <div *ngIf=\"errorMessage\" class=\"error-text col-xl-9 col-xs-12\">*{{ errorMessage }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xl-9 col-12 text-right button-row\">\n            <button class=\"btn btn-primary\"\n                    (click)=\"submit(!id?.valid)\">Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class=\"backdrop\" [class.active]=\"isOpenModal\">\n</div>\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [class.active]=\"isOpenModal\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\" id=\"instance-modal\">\n      <div class=\"modal-body\">\n        <div class=\"d-flex justify-content-between\">\n          <h2>Where to get your instance ID</h2>\n          <i class=\"fa fa-close text-right close-icon\" (click)=\"toggleModal()\"></i>\n        </div>\n        <p>You can copy the instance ID in the Properties panel of your instance, select the Description tab back in\n          the <b>EC2 console</b>. Click the Copy button next to the Instance ID field. This button appears as soon\n          as you hover the cursor of your mouse over the ID.</p>\n        <div>\n          <img src=\"./assets/id-instruction-img.png\" alt=\"instruction-image\">\n          <p><em>Hover the cursor over instance ID for Copy button to appear.</em></p>\n        </div>\n        <p>Paste the instance in the Instance ID field of the Percona Monitoring and Management welcome page and\n          click Submit.</p>\n        <a class=\"modal-button btn btn-primary\" (click)=\"toggleModal()\">Got it, thanks</a>\n      </div>\n    </div>\n  </div>\n</div>","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent {\n  constructor() {}\n  title = \"app\";\n}\n","<div style=\"display: none;\">\n  <h1>Welcome to app!</h1>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppRouter } from './app.router';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppAmiInstallationComponent } from './ami/ami.component';\nimport { AppOvfComponent } from './ovf/ovf.component';\nimport { AppInstanceIdComponent } from './ami/instance-id/instance-id.component';\nimport { AppAccountCredentialsComponent } from './ami/account-credentials/account-credentials.component';\nimport { AppAccountCredentialsOvfComponent } from './ovf/account-credentials-ovf/account-credentials-ovf.component';\nimport { AppSuccessPageComponent } from './success-page/success-page.component';\nimport { AmiCredentialsGuard, AmiGuard } from './guards/ami.guard';\nimport { OvfGuard } from './guards/ovf.guard';\nimport { AppService } from './app.service';\nimport { MainGuard } from './guards/main.guard';\nimport { AppDockerPageComponent } from './docker-page/docker-page.component';\nimport { SuccessPageGuard } from './guards/success-page.guard';\nimport { DockerGuard } from \"./guards/docker.guard\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AppAmiInstallationComponent,\n        AppInstanceIdComponent,\n        AppAccountCredentialsComponent,\n        AppOvfComponent,\n        AppAccountCredentialsOvfComponent,\n        AppSuccessPageComponent,\n        AppDockerPageComponent,\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        RouterModule.forRoot(AppRouter),\n        FormsModule,\n    ],\n    exports: [\n        AppComponent,\n    ],\n    providers: [MainGuard, AmiGuard, AmiCredentialsGuard, OvfGuard, SuccessPageGuard, DockerGuard, AppService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Routes } from '@angular/router';\nimport { AppAmiInstallationComponent } from './ami/ami.component';\nimport { AppInstanceIdComponent } from './ami/instance-id/instance-id.component';\nimport { AppAccountCredentialsComponent } from './ami/account-credentials/account-credentials.component';\nimport { AppOvfComponent } from './ovf/ovf.component';\nimport { AppAccountCredentialsOvfComponent } from './ovf/account-credentials-ovf/account-credentials-ovf.component';\nimport { AppSuccessPageComponent } from './success-page/success-page.component';\nimport { AmiCredentialsGuard, AmiGuard } from './guards/ami.guard';\nimport { OvfGuard } from './guards/ovf.guard';\nimport { AppComponent } from './app.component';\nimport { MainGuard } from './guards/main.guard';\nimport { AppDockerPageComponent } from './docker-page/docker-page.component';\nimport { SuccessPageGuard } from './guards/success-page.guard';\nimport { DockerGuard } from './guards/docker.guard';\n\nexport const AppRouter: Routes = [\n    { path: '', children: [\n            {\n                path: '',\n                component: AppComponent, canActivate: [MainGuard]\n            },\n            {\n                path: 'ovf', component: AppOvfComponent, canActivate: [OvfGuard], children: [\n                    { path: 'account-credentials-ovf', component: AppAccountCredentialsOvfComponent },\n                    { path: '', redirectTo: 'account-credentials-ovf', pathMatch: 'full' },\n                ]\n            },\n            {\n                path: 'ami', component: AppAmiInstallationComponent, canActivate: [AmiGuard], children: [\n                    { path: 'instance-id', component: AppInstanceIdComponent },\n                    { path: 'account-credentials', component: AppAccountCredentialsComponent, canActivate: [AmiCredentialsGuard] },\n                    { path: '', redirectTo: 'instance-id', pathMatch: 'full' },\n                ]\n            },\n        ]\n    },\n    { path: 'docker', component: AppDockerPageComponent, canActivate: [DockerGuard] },\n    { path: 'success-page', component: AppSuccessPageComponent, canActivate: [SuccessPageGuard] }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\n\ninterface UserCredentials {\n    username: string;\n    password: string;\n    instanceId?: string;\n}\n\n@Injectable()\nexport class AppService {\n    private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    private url = '/configurator/v1/users';\n    private instanceUrl = '/configurator/v1/check-instance';\n    private sshUrl = '/configurator/v1/sshkey';\n    private data = <any>{};\n    _isInstanceChecked = false;\n    _isInstallationComplete = false;\n\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * Check installation completing for guards\n     * @returns {boolean} - result of checking instance id\n     */\n    public isInstallationComplete() {\n        return this._isInstallationComplete;\n    }\n\n    /**\n     * Check installation completing for guards\n     * @returns {boolean} - result of checking instance id\n     */\n    public isInstanceChecked() {\n        return this._isInstanceChecked;\n    }\n\n    /**\n     * Send user data\n     * @param {UserCredentials} credentials - username and password\n     * @returns {Promise<{}>} - result of matching credentials\n     */\n    checkUserData(credentials: UserCredentials): Promise<any> {\n        this.data.Username = credentials.username;\n        this.data.Password = credentials.password;\n\n        return this.http\n            .post(this.url, this.data, { headers: this.headers })\n            .toPromise()\n            .then(() => this._isInstallationComplete = true);\n    }\n\n    /**\n     * Send instance id\n     * @param {string} instanceId - instance of user id\n     * @returns {Promise<{}>} - result of matching instanceId\n     */\n    checkInstanceId(instanceId: string): Promise<any> {\n        this.data.Instance = instanceId;\n        return this.http\n            .post(this.instanceUrl, { instanceId }, { headers: this.headers })\n            .toPromise()\n            .then(() => this._isInstanceChecked = true);\n    }\n\n    /**\n     * Send ssh\n     * @param {string} ssh - ssh\n     * @returns {Promise<{}>} - result of matching ssh\n     */\n    checkSSH(ssh: string): Promise<any> {\n        return this.http\n            .post(this.sshUrl, { key: ssh }, { headers: this.headers })\n            .toPromise();\n    }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-docker-page',\n  templateUrl: './docker-page.component.html',\n  styleUrls: ['./docker-page.component.scss']\n})\nexport class AppDockerPageComponent {\n\n  constructor() { }\n}\n","<div class=\"container-fluid header\">\n    <div class=\"row\">\n        <div class=\"col-xl-4 col-5 border-right\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-2\">\n                        <img src=\"./assets/pmm-logo.png\" class=\"header-logo\" alt=\"pmm-logo\">\n                    </div>\n                    <div class=\"col-10\">Percona Monitoring and Management</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-8 col-7\">\n            <p>Installation docker</p>\n        </div>\n    </div>\n</div>\n<p class=\"text-center\">\n    Please use pmm-server options for docker <a\n        href=\"https://www.percona.com/doc/percona-monitoring-and-management/glossary.option.html#pmm-glossary-pmm-server-additional-option\"\n        target=\"_blank\">read more here</a>\n</p>\n\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class AmiGuard implements CanActivate {\n    INSTALLATION_TYPE = 'ami';\n\n    constructor() { }\n\n    /**\n     * Check on resolution for ami route\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return environment.installationType === this.INSTALLATION_TYPE;\n    }\n}\n\n@Injectable()\nexport class AmiCredentialsGuard implements CanActivate {\n    constructor(private appService: AppService) {\n    }\n\n    /**\n     * Check on resolution for ami children account credentials route\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.appService.isInstanceChecked();\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class DockerGuard implements CanActivate {\n  INSTALLATION_TYPE = \"docker\";\n\n  constructor() {}\n\n  /**\n   * Check resolution for ovf route\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    return environment.installationType === this.INSTALLATION_TYPE;\n  }\n}\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot,\n    Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nenum Installation {\n    AMI = 'ami',\n    OVF = 'ovf',\n    DOCKER = 'docker'\n}\n\n@Injectable()\nexport class MainGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        switch (environment.installationType) {\n            case Installation.AMI:\n                this.router.navigate(['ami']);\n                break;\n            case Installation.OVF:\n                this.router.navigate(['ovf']);\n                break;\n            case Installation.DOCKER:\n                this.router.navigate(['docker']);\n                break;\n        }\n\n        return false;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class OvfGuard implements CanActivate {\n  INSTALLATION_TYPE = \"ovf\";\n\n  constructor() {}\n\n  /**\n   * Check resolution for ovf route\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    return environment.installationType === this.INSTALLATION_TYPE;\n  }\n}\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot\n} from '@angular/router';\nimport { AppService } from '../app.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SuccessPageGuard implements CanActivate {\n    constructor(private appService: AppService) { }\n\n    /**\n     * Check resolution for success page router link\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.appService.isInstallationComplete();\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\n\n@Component({\n    selector: 'app-account-credentials-ovf',\n    templateUrl: './account-credentials-ovf.component.html',\n    styleUrls: ['./account-credentials-ovf.component.scss'],\n})\nexport class AppAccountCredentialsOvfComponent {\n    public ovfUserData = {\n        username: '',\n        password: '',\n    };\n\n    public fields = {\n        USERNAME_OVF: 'usernameOvf',\n        PASSWORD_OVF: 'passwordOvf',\n        REPEAT_PASSWORD_OVF: 'repeatPasswordOvf',\n        SSH_OVF: 'ssh'\n    };\n\n    public ssh = '';\n    public repeatPassword = '';\n    public isIdentical: boolean;\n    public errorMessage: '';\n    public errorMessageSsh: '';\n    public isSubmitted = false;\n\n    constructor(private router: Router, public appService: AppService) {\n    }\n\n    /**\n     * Trim whitespaces in fields\n     * @param event - User keyup event\n     * @param {string} field - Name of active input filed\n     */\n    onKey(event: any, field: string) {\n        switch(field) {\n            case this.fields.USERNAME_OVF: {\n                this.ovfUserData.username = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.PASSWORD_OVF: {\n                this.ovfUserData.password = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.REPEAT_PASSWORD_OVF: {\n                this.repeatPassword = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.SSH_OVF: {\n                this.ssh = event.target.value.trim();\n                break;\n            }\n        }\n        this.isSubmitted = false;\n        this.errorMessage = '';\n    }\n\n    /**\n     * Check passwords fields for identical\n     */\n    public onPasswordChange(): void {\n        this.isIdentical = this.ovfUserData.password === this.repeatPassword;\n    }\n\n    /**\n     * Send a request and navigate to success page if response is success\n     * @returns {boolean | void} boolean - result of matching password fields\n     */\n    public submit(isError): (boolean | void) {\n        this.isSubmitted = true;\n        this.onPasswordChange();\n        if (!this.isIdentical) {\n            return false;\n        }\n        if (isError) return;\n        this.appService.checkUserData(this.ovfUserData).then(() => {\n            if (this.ssh && this.ssh.length) return this.checkSSH();\n            else this.router.navigate(['success-page']);\n        }).catch((err) => {\n            this.errorMessageSsh = err.error.title ? err.error.title : err.statusText;\n        });\n    }\n\n    private checkSSH() {\n        this.appService.checkSSH(this.ssh)\n            .then(() => this.router.navigate(['success-page']))\n            .catch((err) => this.errorMessage = err.error.title ? err.error.title : err.statusText);\n    }\n}\n","<div class=\"tab-pane\">\n  <div class=\"row\">\n    <p class=\"text-center col-8 offset-2\">Create your\n      username and password to access your PMM</p>\n  </div>\n  <form>\n    <div class=\"row\">\n      <div\n        class=\"col-10 offset-xl-2 offset-1 input-wrapper\">\n        <div class=\"row\">\n          <div class=\"col-xl-9 col-12 text-right\">\n            <input type=\"text\" class=\"custom-form-input form-control ng-untouched ng-pristine ng-valid\"\n                   placeholder=\"Username\"\n                   name=\"{{fields.USERNAME_OVF}}\"\n                   [(ngModel)]=\"ovfUserData.username\"\n                   #user=\"ngModel\"\n                   (keyup)=\"onKey($event, fields.USERNAME_OVF)\"\n                   required>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div *ngIf=\"user?.errors && isSubmitted\"\n               class=\"col-xl-9 col-12 error-text\">\n            <div *ngIf=\"user?.errors?.required\">*Field is required</div>\n          </div>\n          <div *ngIf=\"errorMessage\" class=\"error-text col-xl-9 col-xs-12\">*{{ errorMessage }}</div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-xl-9 col-12 text-right\">\n            <input type=\"password\" class=\"custom-form-input form-control ng-untouched ng-pristine ng-valid\"\n                   placeholder=\"Password\"\n                   name=\"{{ fields.PASSWORD_OVF }}\"\n                   [(ngModel)]=\"ovfUserData.password\"\n                   #pass=\"ngModel\"\n                   (keyup)=\"onKey($event, fields.PASSWORD_OVF)\"\n                   maxlength=\"255\"\n                   required>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div *ngIf=\"pass?.errors && isSubmitted\"\n               class=\"col-xl-9 col-12 error-text\">\n            <div *ngIf=\"pass?.errors?.required\">*Field is required</div>\n            <div *ngIf=\"pass?.errors?.maxlength\">*Field can not me more than 255 characters</div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xl-9 col-12 text-right\">\n            <input type=\"password\" class=\"custom-form-input form-control ng-untouched ng-pristine ng-valid\"\n                   placeholder=\"Repeat Password\"\n                   name=\"{{ fields.REPEAT_PASSWORD_OVF }}\"\n                   [(ngModel)]=\"repeatPassword\"\n                   #repeatpass=\"ngModel\"\n                   (keyup)=\"onKey($event, fields.REPEAT_PASSWORD_OVF)\"\n                   required>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div *ngIf=\"repeatpass?.errors && isSubmitted\"\n               class=\"col-xl-9 col-12 error-text\">\n            <div *ngIf=\"repeatpass?.errors?.required\">*Field is required</div>\n          </div>\n          <div *ngIf=\"!isIdentical && isSubmitted\" class=\"col-lg-9 col-md-9 col-sm-12 error-text\">*Passwords must be identical</div>\n        </div>\n        <div class=\"row flex-container row-ssh\">\n          <div class=\"col-xl-9 col-12 text-right\">\n            <input type=\"text\" class=\"custom-form-input form-control ng-untouched ng-pristine ng-valid\"\n                   placeholder=\"SSH Key\"\n                   name=\"{{ fields.SSH_OVF }}\"\n                   [(ngModel)]=\"ssh\"\n                   (keyup)=\"onKey($event, fields.SSH_OVF)\">\n          </div>\n          <div class=\"col-xl-3 col-12 input-caption font-italic\">\n            <span>*optional</span>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div *ngIf=\"errorMessageSsh\" class=\"error-text col-xl-9 col-xs-12\">*{{ errorMessageSsh }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xl-9 col-12 text-right button-row\">\n            <button type=\"reset\" class=\"btn btn-primary\">Reset</button>\n            <button class=\"btn btn-primary\" (click)=\"submit(!user?.valid || !pass?.valid || !repeatpass?.valid)\">\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ovf',\n  templateUrl: './ovf.component.html',\n  styleUrls: ['./ovf.component.scss']\n})\nexport class AppOvfComponent {\n\n  constructor() { }\n}\n","<div class=\"container-fluid header\">\n  <div class=\"row\">\n    <div class=\"col-xl-4 col-5 border-right\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-2\">\n            <img src=\"./assets/pmm-logo.png\" class=\"header-logo\" alt=\"pmm-logo\">\n          </div>\n          <div class=\"col-10\">Percona Monitoring and Management</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-8 col-7\">\n      <p>Installation <i class=\"fa fa-long-arrow-right\"></i> OVF</p>\n    </div>\n  </div>\n</div>\n<div class=\"container main\">\n  <div class=\"row\">\n    <div class=\"col-xl-10 offset-xl-1 col-12\">\n      <p class=\"text-center\">PMM Installation Wizard</p>\n        <section>\n          <ul class=\"nav nav-tabs\">\n            <li class=\"nav-item\" routerLinkActive=\"active\"><a routerLink=\"account-credentials-ovf\">Account\n              Credentials</a></li>\n          </ul>\n          <div class=\"tab-content\">\n              <router-outlet></router-outlet>\n          </div>\n        </section>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-success-page',\n    templateUrl: './success-page.component.html',\n    styleUrls: ['./success-page.component.scss']\n})\nexport class AppSuccessPageComponent implements OnInit {\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {\n        this.redirectToMainPage();\n    }\n\n    /**\n     * Automatic redirect to installation page\n     */\n    goTo(): void {\n        window.location.replace('/');\n    }\n\n    public redirectToMainPage(): void {\n        setTimeout(() => {\n          this.goTo();\n        }, 5000);\n    }\n}\n","<div class=\"header\">\n    <div class=\"row\">\n        <div class=\"col-xl-4 col-5 border-right\">\n            <div class=\"header-logo\"></div>\n            <p>Percona Monitoring and Management</p>\n        </div>\n        <div class=\"col-xl-8 col-7\">\n            <p>Installation</p>\n        </div>\n    </div>\n</div>\n<p class=\"text-center\">\n    Congratulations! Your PMM is configured.\n    Please click <span class=\"home-link\" (click)=\"goTo()\">here</span> or wait 5 seconds to be redirected to the Index\n    page\n</p>\n<p class=\"text-center\">\n    <i class=\"fa fa-spinner\"></i>\n</p>\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  installationType: \"docker\",\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}